plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.jjh.mtvs'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
// MapStruct & Lombok 설정
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	compileOnly 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'mysql:mysql-connector-java:8.0.33'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'io.minio:minio:8.2.0'

	// Lombok을 사용하는 경우 - 순서가 중요합니다!
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// MockMultipartFile이 포함된 라이브러리
	implementation 'org.springframework:spring-test'

	// Monitoring & Logging
	implementation 'org.springframework.boot:spring-boot-starter-actuator'  // 메트릭스 수집을 위한 actuator
	implementation 'io.micrometer:micrometer-registry-prometheus'          // Prometheus 메트릭스
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'    // Logstash 로깅
	implementation 'com.github.loki4j:loki-logback-appender:1.5.0'        // Loki 로깅
	implementation 'io.micrometer:micrometer-core'                        // 메트릭스 코어

	// AOP (메트릭스 수집에 필요)
	implementation 'org.springframework.boot:spring-boot-starter-aop'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
